{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","goodsFromArray","selectedGood","handleSelect","good","setState","handleClear","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUWC,EAAb,4MACEC,MAAyB,CACvBC,eAAgBH,EAChBI,aAAc,OAHlB,EAMEC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,aAAcE,KAPlC,EAUEE,YAAc,WACZ,EAAKD,SAAS,CAAEH,aAAc,MAXlC,4CAcE,WAAU,IAAD,OACCA,EAAiBK,KAAKP,MAAtBE,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACIN,EAEE,qBAAIM,UAAU,sCAAd,UACGN,EACA,IAFH,cAKGA,GACC,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,YACd,aAAW,aAKhB,oBAAIE,UAAU,QAAd,+BAEL,uBAAOA,UAAU,QAAjB,SACE,gCACGD,KAAKP,MAAMC,eAAeU,KAAI,SAACP,GAC9B,OACE,qBACE,UAAQ,OAERI,UAAWI,IACT,CACE,+BAAiCR,IAASF,IALhD,UASE,6BACIE,IAASF,EAEP,wBACE,UAAQ,YACRO,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKP,aAAaC,IAJnC,eAUA,wBACE,UAAQ,eACRK,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKJ,YAJhB,iBAWN,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGJ,MAhCEA,iBA7CvB,GAAyBS,IAAMC,WCtB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3d32738b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goodsFromArray: string[]\n  selectedGood: string;\n};\n\ntype Good = string;\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    goodsFromArray: goods,\n    selectedGood: 'Jam',\n  };\n\n  handleSelect = (good: Good) => {\n    this.setState({ selectedGood: good });\n  };\n\n  handleClear = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {(selectedGood)\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {selectedGood}\n              {' '}\n              is selected\n\n              {selectedGood && (\n                <button\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={this.handleClear}\n                  aria-label=\"clear\"\n                />\n              )}\n            </h1>\n          )\n          : (<h1 className=\"title\">No goods selected</h1>)}\n\n        <table className=\"table\">\n          <tbody>\n            {this.state.goodsFromArray.map((good) => {\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames(\n                    {\n                      'has-background-success-light': (good === selectedGood),\n                    },\n                  )}\n                >\n                  <td>\n                    {(good !== selectedGood)\n                      ? (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => this.handleSelect(good)}\n                        >\n                          +\n                        </button>\n                      )\n                      : (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={this.handleClear}\n                        >\n                          -\n                        </button>\n                      )}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}